name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r app/requirements.txt

    - name: Read version from file
      id: version
      run: echo "::set-output name=VERSION::$(cat app/version.txt)"

    - name: Build Docker image
      run: |
        docker build --build-arg VERSION=${{ steps.version.outputs.VERSION }} -t spacelysprockets.azurecr.io/visitor-counter:${{ steps.version.outputs.VERSION }} -f app/Dockerfile app

    - name: Log in to Azure Container Registry
      run: |
        echo ${{ secrets.ACR_PASSWORD }} | docker login spacelysprockets.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Push Docker image
      run: docker push spacelysprockets.azurecr.io/visitor-counter:${{ steps.version.outputs.VERSION }}
  
    - name: AKS Set up
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Authenticate with Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up AKS context
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f k8s/namespaces.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/visitors-counter.yaml
